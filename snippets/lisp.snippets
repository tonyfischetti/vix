snippet #!
	#!/usr/bin/env lispscript


snippet template
	#!/usr/bin/env lispscript

	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;                                                       ;;
	;;   ${1:`Filename('$1.lisp', 'foo.lisp')`}                          ;;
	;;                                                       ;;
	;;                Author: ${2:author}       ;;
	;;                        ${3:email}        ;;
	;;                                                       ;;
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


	; ------------------------------------ ;
	(declaim (sb-ext:muffle-conditions cl:warning))
	(declaim (sb-ext:muffle-conditions sb-ext:compiler-note))
	(setf sb-debug:*debug-beginner-help-p* nil)
	(setf sb-debug:*backtrace-frame-count* 2)

	#-quicklisp (load "~/quicklisp/setup.lisp")

	(ql:quickload '(:clix)
	                ; :cl-ppcre :alexandria :xpath :drakma)
	              :silent t)
	; ------------------------------------ ;

	(defpackage :${1:`Filename('$1', 'foo.lisp')`}
	  (:use :common-lisp
	        :sb-ext
	        ; :cl-ppcre :alexandria :xpath :drakma
	        :clix))

	(in-package :${1:`Filename('$1', 'foo.lisp')`})

	; (rename-package :cl-ppcre :cl-ppcre '(re))
	
	
snippet sep
	;--------------------------------------------------;


snippet fileio
	(with-open-file (stream "${1:filename}" :direction ${2: :output|:input}
	                                        :if-exists ${3: :error|:append|:supersede}
											:if-does-not-exist ${4: :error|:create})
		${5:body})

